name: CI

on:
  push:
    branches:
      - main  # Runs on push to the `main` branch
  pull_request:
    branches:
      - main  # Optional: Runs on pull requests to `main`

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Ensure Latest Main
      run: |
        git fetch origin main
        git reset --hard origin/main  # Ensure the latest changes from main

    - name: Set up SSH for Submodules
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SUBMODULE_DEPLOY_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Configure Git User
      run: |
        git config --global user.email "${{ secrets.GIT_EMAIL }}"
        git config --global user.name "${{ secrets.GIT_NAME }}"
        git config --global url.https://${{ secrets.GH_TOKEN }}@github.com/.insteadOf https://github.com/

    - name: Clone Submodules
      run: |
        git submodule update --init --recursive

    - name: Install Dependencies
      run: npm install

    - name: Build Project
      run: npm run build

    - name: Check if gh-pages exists
      run: |
        git fetch origin
        if git show-ref --verify --quiet refs/heads/gh-pages; then
          echo "gh-pages branch exists."
        else
          echo "gh-pages branch does not exist. Creating it now."
          git checkout --orphan gh-pages  # Create a new branch from the current state
          git rm -rf .  # Remove all files from the new branch
          echo "gh-pages branch created and cleaned."
        fi

    - name: Checkout gh-pages
      run: |
        git fetch origin gh-pages || echo "No gh-pages branch to fetch"
        git checkout gh-pages || echo "gh-pages branch does not exist yet"

    - name: Merge Main to gh-pages
      run: |
        git merge origin/main --allow-unrelated-histories --no-ff --commit --no-edit || (echo "Merge conflict detected. Aborting..." && exit 1)

    - name: Push Changes to
